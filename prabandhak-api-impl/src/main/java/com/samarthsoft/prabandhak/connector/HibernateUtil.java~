package com.samarthsoft.prabandhak.connector;

import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
import org.hibernate.service.ServiceRegistry;
import org.hibernate.service.ServiceRegistryBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class HibernateUtil {
	private static final Logger LOG = LoggerFactory.getLogger(HibernateUtil.class);
	private static SessionFactory sessionFactory = null;

	private HibernateUtil() {
		// Utility class
	}

	public static SessionFactory getSessionFactory() {
		LOG.debug("loading Hibernate Configuration...");
		try {
			// TODO : Call load configuration code via static block
			
			 /*ConfigurationLoader.loadConfiguration("school_on_web.properties");
			 Configuration configuration = new Configuration();
			 configuration.setProperty("hibernate.connection.url","jdbc:mysql://" + System.getProperty("database.host") + ":" +
			 System.getProperty("database.port") + "/" +
			 System.getProperty("database.name"));
			 configuration.setProperty("hibernate.connection.username",
			 System.getProperty("database.login"));
			 configuration.setProperty("hibernate.connection.password",
			 System.getProperty("database.password"));
			 configuration.configure();*/
			 
			Configuration configuration = new Configuration();
			String databaseHost = System.getenv().get("OPENSHIFT_MYSQL_DB_HOST");
			String databasePort = System.getenv().get("OPENSHIFT_MYSQL_DB_PORT");
			configuration.setProperty("hibernate.connection.url",
					"jdbc:mysql://" + databaseHost + ":" + databasePort + "/schoolapp");
			configuration.setProperty("hibernate.connection.username", "adminxBZiGxc");
			configuration.setProperty("hibernate.connection.password", "1zEJ1rmkZKUC");
			configuration.configure();
			ServiceRegistry serviceRegistry = new ServiceRegistryBuilder().applySettings(configuration.getProperties())
					.buildServiceRegistry();
			sessionFactory = configuration.buildSessionFactory(serviceRegistry);
		} catch (Exception ex) {
			LOG.error("", ex);
		}
		return sessionFactory;
	}

	/*
	 * public static SessionFactory getSessionFactory() {
	 * if(sessionFactory==null) sessionFactory = getSessionFactory1(); return
	 * sessionFactory; }
	 */
}